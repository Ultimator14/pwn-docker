#!/usr/bin/python

from pwn import *
from pwndocker import GDBConfig, GEFConfig, PwnGDBSession, PwnRemoteSession, PwnSession

# Per-file config
BINARY = "./mybinary"
LOCAL = True
SERVER = False

RHOST = "remotehost"
RPORT = 0

# Gdb setup
# gdbconf = GDBConfig(BINARY)  # don't use gef
gdbconf = GEFConfig(BINARY)  # use gef
gdbconf.script = """
r
b main
c
"""

pwns: PwnSession  # make mypy happy
if LOCAL:
    pwns = PwnGDBSession(BINARY, gdbconf)

    if SERVER:
        # If the binary is a server itself, start it and connect via remote
        sh_server, sh = pwns.sh_init_server(RPORT)
    else:
        # If the binary is NOT a server, just connect and attach
        sh = pwns.sh_init()
else:
    pwns = PwnRemoteSession(BINARY, RHOST, RPORT)
    sh = pwns.sh_init()  # we connect to a remote, the server is already running

# Setup reverse shell listener
# l = listen(9999)

# print(sh.recv())
# print(sh.recvline())
# print(sh.recvuntil("mystr"))

# sh.send("")
# sh.sendline("")

# sh.interactive()

# sh.close()
